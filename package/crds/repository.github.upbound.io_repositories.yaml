---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: repositories.repository.github.upbound.io
spec:
  group: repository.github.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - github
    kind: Repository
    listKind: RepositoryList
    plural: repositories
    singular: repository
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Repository is the Schema for the Repositorys API. Creates and
          manages repositories within GitHub organizations or personal accounts
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RepositorySpec defines the desired state of Repository
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowAutoMerge:
                    description: Set to true to allow auto-merging pull requests on
                      the repository.
                    type: boolean
                  allowMergeCommit:
                    description: Set to false to disable merge commits on the repository.
                    type: boolean
                  allowRebaseMerge:
                    description: Set to false to disable rebase merges on the repository.
                    type: boolean
                  allowSquashMerge:
                    description: Set to false to disable squash merges on the repository.
                    type: boolean
                  archiveOnDestroy:
                    description: Set to true to archive the repository instead of
                      deleting on destroy.
                    type: boolean
                  archived:
                    description: Specifies if the repository should be archived. Defaults
                      to false. NOTE Currently, the API does not support unarchiving.
                    type: boolean
                  autoInit:
                    description: Set to true to produce an initial commit in the repository.
                    type: boolean
                  defaultBranch:
                    description: '(Deprecated: Use github_branch_default resource
                      instead) The name of the default branch of the repository. NOTE:
                      This can only be set after a repository has already been created,
                      and after a correct reference has been created for the target
                      branch inside the repository. This means a user will have to
                      omit this parameter from the initial repository creation and
                      create the target branch inside of the repository prior to setting
                      this attribute. Can only be set after initial repository creation,
                      and only if the target branch exists'
                    type: string
                  deleteBranchOnMerge:
                    description: Automatically delete head branch after a pull request
                      is merged. Defaults to false.
                    type: boolean
                  description:
                    description: A description of the repository.
                    type: string
                  gitignoreTemplate:
                    description: Use the name of the template without the extension.
                      For example, "Haskell".
                    type: string
                  hasDownloads:
                    description: Set to true to enable the (deprecated) downloads
                      features on the repository.
                    type: boolean
                  hasIssues:
                    description: Set to true to enable the GitHub Issues features
                      on the repository.
                    type: boolean
                  hasProjects:
                    description: Set to true to enable the GitHub Projects features
                      on the repository. Per the GitHub documentation when in an organization
                      that has disabled repository projects it will default to false
                      and will otherwise default to true. If you specify true when
                      it has been disabled it will return an error.
                    type: boolean
                  hasWiki:
                    description: Set to true to enable the GitHub Wiki features on
                      the repository.
                    type: boolean
                  homepageUrl:
                    description: URL of a page describing the project.
                    type: string
                  ignoreVulnerabilityAlertsDuringRead:
                    description: Set to true to not call the vulnerability alerts
                      endpoint so the resource can also be used without admin permissions
                      during read.
                    type: boolean
                  isTemplate:
                    description: Set to true to tell GitHub that this is a template
                      repository.
                    type: boolean
                  licenseTemplate:
                    description: Use the name of the template without the extension.
                      For example, "mit" or "mpl-2.0".
                    type: string
                  mergeCommitMessage:
                    description: Can be PR_BODY, PR_TITLE, or BLANK for a default
                      merge commit message.
                    type: string
                  mergeCommitTitle:
                    description: Can be PR_TITLE or MERGE_MESSAGE for a default merge
                      commit title.
                    type: string
                  pages:
                    description: The repository's GitHub Pages configuration. See
                      GitHub Pages Configuration below for details.
                    items:
                      properties:
                        cname:
                          description: The custom domain for the repository. This
                            can only be set after the repository has been created.
                          type: string
                        source:
                          description: The source branch and directory for the rendered
                            Pages site. See GitHub Pages Source below for details.
                          items:
                            properties:
                              branch:
                                description: The repository branch used to publish
                                  the site's source files. (i.e. main or gh-pages.
                                type: string
                              path:
                                description: 'The repository directory from which
                                  the site publishes (Default: /).'
                                type: string
                            required:
                            - branch
                            type: object
                          type: array
                      required:
                      - source
                      type: object
                    type: array
                  private:
                    description: Set to true to create a private repository. Repositories
                      are created as public (e.g. open source) by default.
                    type: boolean
                  squashMergeCommitMessage:
                    description: Can be PR_BODY, COMMIT_MESSAGES, or BLANK for a default
                      squash merge commit message.
                    type: string
                  squashMergeCommitTitle:
                    description: Can be PR_TITLE or COMMIT_OR_PR_TITLE for a default
                      squash merge commit title.
                    type: string
                  template:
                    description: Use a template repository to create this resource.
                      See Template Repositories below for details.
                    items:
                      properties:
                        owner:
                          description: ': The GitHub organization or user the template
                            repository is owned by.'
                          type: string
                        repository:
                          description: ': The name of the template repository.'
                          type: string
                      required:
                      - owner
                      - repository
                      type: object
                    type: array
                  topics:
                    description: The list of topics of the repository.
                    items:
                      type: string
                    type: array
                  visibility:
                    description: Can be public or private. If your organization is
                      associated with an enterprise account using GitHub Enterprise
                      Cloud or GitHub Enterprise Server 2.20+, visibility can also
                      be internal. The visibility parameter overrides the private
                      parameter.
                    type: string
                  vulnerabilityAlerts:
                    description: 'Set to true to enable security alerts for vulnerable
                      dependencies. Enabling requires alerts to be enabled on the
                      owner level. (Note for importing: GitHub enables the alerts
                      on public repos but disables them on private repos by default.)
                      See GitHub Documentation for details. Note that vulnerability
                      alerts have not been successfully tested on any GitHub Enterprise
                      instance and may be unavailable in those settings.'
                    type: boolean
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: RepositoryStatus defines the observed state of Repository.
            properties:
              atProvider:
                properties:
                  etag:
                    type: string
                  fullName:
                    description: A string of the form "orgname/reponame".
                    type: string
                  gitCloneUrl:
                    description: URL that can be provided to git clone to clone the
                      repository anonymously via the git protocol.
                    type: string
                  htmlUrl:
                    description: URL to the repository on the web.
                    type: string
                  httpCloneUrl:
                    description: URL that can be provided to git clone to clone the
                      repository via HTTPS.
                    type: string
                  id:
                    type: string
                  nodeId:
                    description: GraphQL global node id for use with v4 API
                    type: string
                  pages:
                    description: The repository's GitHub Pages configuration. See
                      GitHub Pages Configuration below for details.
                    items:
                      properties:
                        custom404:
                          description: Whether the rendered GitHub Pages site has
                            a custom 404 page.
                          type: boolean
                        htmlUrl:
                          description: URL to the repository on the web.
                          type: string
                        status:
                          description: The GitHub Pages site's build status e.g. building
                            or built.
                          type: string
                        url:
                          type: string
                      type: object
                    type: array
                  repoId:
                    description: GitHub ID for the repository
                    type: number
                  sshCloneUrl:
                    description: URL that can be provided to git clone to clone the
                      repository via SSH.
                    type: string
                  svnUrl:
                    description: URL that can be provided to svn checkout to check
                      out the repository via GitHub's Subversion protocol emulation.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
